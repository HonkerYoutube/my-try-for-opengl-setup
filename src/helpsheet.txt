




-------------- creating a texture ----------------



# make a memory index for texture
unsigned int texture;

# make a texture (not ready)
glGenTextures(1, &texture);

# bind the texture
glBindTexture(GL_TEXTURE_2D, texture);

# add paramethers
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

# set some variables
int width, height, nrChannels;

# allocate memory for image
unsigned char* data = stbi_load("resources/textures/container.jpg", &width, &height, &nrChannels, 0);

if (data)
    {

    # generate the image
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data);

    # generate a mipmap (the final texture)
    glGenerateMipmap(GL_TEXTURE_2D);
}
else
{
    std::cout << "Failed to load texture" << std::endl;
}

# free the memory
stbi_image_free(data);



------------------------------------------------